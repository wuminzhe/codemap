// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Fs = require("fs");
var Caml_option = require("rescript/lib/js/caml_option.js");
var Core__Array = require("@rescript/core/src/Core__Array.res.js");
var TreeSitter = require("tree-sitter");
var Core__Option = require("@rescript/core/src/Core__Option.res.js");
var TreeSitterPython = require("tree-sitter-python");
var TreeSitterJavascript = require("tree-sitter-javascript");

function getLanguageName(filename) {
  return Core__Option.flatMap(filename.split(".").pop(), (function (ext) {
                switch (ext) {
                  case "js" :
                      return "javascript";
                  case "py" :
                      return "python";
                  case "rs" :
                      return "rust";
                  case "ts" :
                      return "typescript";
                  default:
                    return ;
                }
              }));
}

function getLanguage(languageName) {
  switch (languageName) {
    case "javascript" :
        return TreeSitterJavascript;
    case "python" :
        return TreeSitterPython;
    default:
      throw {
            RE_EXN_ID: "Failure",
            _1: "Unsupported language",
            Error: new Error()
          };
  }
}

function getScmQuery(languageName) {
  var scmFilename;
  switch (languageName) {
    case "javascript" :
        scmFilename = "javascript.scm";
        break;
    case "python" :
        scmFilename = "python.scm";
        break;
    default:
      throw {
            RE_EXN_ID: "Failure",
            _1: "Unsupported scm query for language " + languageName,
            Error: new Error()
          };
  }
  return Fs.readFileSync(scmFilename, "utf-8");
}

function orElse(o, f) {
  if (o !== undefined) {
    return Caml_option.some(Caml_option.valFromOption(o));
  } else {
    return f();
  }
}

function getTags(filename) {
  return Core__Option.map(Core__Option.map(Core__Option.map(Core__Option.map(orElse(getLanguageName(filename), (function () {
                                console.log("Unsupported file extension");
                              })), (function (languageName) {
                            var language = getLanguage(languageName);
                            var scmQuery = getScmQuery(languageName);
                            return [
                                    language,
                                    scmQuery
                                  ];
                          })), (function (param) {
                        var language = param[0];
                        var parser = new TreeSitter();
                        parser.setLanguage(language);
                        var query = new TreeSitter.Query(language, param[1]);
                        return [
                                parser,
                                query
                              ];
                      })), (function (param) {
                    var source = Fs.readFileSync(filename, "utf-8");
                    var tree = param[0].parse(source);
                    return param[1].captures(tree.rootNode);
                  })), (function (captures) {
                return Core__Array.filterMap(captures, (function (capture) {
                              var node = capture.node;
                              var name = capture.name;
                              var kind = name.startsWith("name.definition.") ? "def" : (
                                  name.startsWith("name.reference.") ? "ref" : undefined
                                );
                              return Core__Option.map(kind, (function (kind) {
                                            return {
                                                    filename: filename,
                                                    name: node.text,
                                                    kind: kind,
                                                    line: node.startPosition.row,
                                                    col: node.startPosition.column
                                                  };
                                          }));
                            }));
              }));
}

var tags = getTags("test.py");

console.log(tags);

exports.getLanguageName = getLanguageName;
exports.getLanguage = getLanguage;
exports.getScmQuery = getScmQuery;
exports.orElse = orElse;
exports.getTags = getTags;
exports.tags = tags;
/* tags Not a pure module */
